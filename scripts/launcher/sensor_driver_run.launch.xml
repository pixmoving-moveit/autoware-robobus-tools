<launch>
    <arg name="robot_state" default="true"/>
    <arg name="use_concat_filter" default="true"/>
    <arg name="use_pointcloud_container" default="false" description="launch pointcloud container"/>
    <arg name="pointcloud_container_name" default="pointcloud_container"/>
    
    <arg name="vehicle_model" default="robobus" description="vehicle model name"/>
	<arg name="sensor_model" default="robobus_sensor_kit" description="sensor model name"/>
	<arg name="config_dir" default="$(env HOME)/pix/parameter/sensor_kit/robobus_sensor_kit_description/extrinsic_parameters" description="path to dir where sensors_calibration.yaml, etc. are located"/>
	<let name="model_file" value="$(find-pkg-share tier4_vehicle_launch)/urdf/vehicle.xacro" />

    <arg name="autoware_robobus_calibration_path" default="/home/nvidia/pix/robobus/autoware-robobus-calibration"/>

  	<!-- vehicle description -->
	<node name="robot_state_publisher" pkg="robot_state_publisher" exec="robot_state_publisher" if="$(var robot_state)">
		<param name="robot_description" value="$(command 'xacro $(var model_file) vehicle_model:=$(var vehicle_model) sensor_model:=$(var sensor_model) config_dir:=$(var config_dir)' 'warn')"/>
	</node>

    <group>
        <push-ros-namespace namespace="sensing"/>
        <include file="$(find-pkg-share robobus_sensor_kit_launch)/launch/lidar/os_sensor_fl.launch.xml" />
        <include file="$(find-pkg-share robobus_sensor_kit_launch)/launch/lidar/os_sensor_fr.launch.xml" />
        <include file="$(find-pkg-share robobus_sensor_kit_launch)/launch/lidar/os_sensor_rl.launch.xml" />
        <include file="$(find-pkg-share robobus_sensor_kit_launch)/launch/lidar/os_sensor_rr.launch.xml" />

        <group>
        <push-ros-namespace namespace="lidar"/>
        
        <include file="$(var autoware_robobus_calibration_path)/scripts/launcher/pointcloud_preprocessor.launch.py" if="$(var robot_state)">
            <arg name="base_frame" value="base_link"/>
            <arg name="use_intra_process" value="true"/>
            <arg name="use_multithread" value="true"/>
            <arg name="use_concat_filter" value="$(var use_concat_filter)"/>
            <arg name="use_pointcloud_container" value="$(var use_pointcloud_container)"/>
            <arg name="container_name" value="$(var pointcloud_container_name)"/>
        </include>
		</group>

        <group>
			<push-ros-namespace namespace="camera"/>
            <include file="$(var autoware_robobus_calibration_path)/scripts/launcher/camera_gmsl_top.launch.py" />
		</group>

        <group>
			<push-ros-namespace namespace="gnss"/>
            <include file="$(find-pkg-share robobus_sensor_kit_launch)/launch/combined_navigation/nmea_udpclient_driver.launch.py" />
		</group>
    </group>

    <arg name="rviz_config_lidar" default="$(var autoware_robobus_calibration_path)/scripts/rviz/lidar.rviz" description="rviz config"/>
    <arg name="rviz_config_camera" default="$(var autoware_robobus_calibration_path)/scripts/rviz/camera.rviz" description="rviz config"/>
    <group>
        <node pkg="rviz2" exec="rviz2" name="lidar_rviz2" output="screen" args="-d $(var rviz_config_lidar)" if="$(var robot_state)" />
        <!-- <node pkg="rviz2" exec="rviz2" name="camera_rviz2" output="screen" args="-d $(var rviz_config_camera)" if="$(var rviz)" /> -->
    </group>

</launch>